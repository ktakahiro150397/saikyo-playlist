@model  PlayListModel

<h1>
    @Model.PlayListName
</h1>

<div id="player"></div>

<div>
    @foreach (var item in Model.PlayLists)
    {
        <div>

            <img src="https://img.youtube.com/vi/@item.ItemId/2.jpg" />

            <a onclick="javascript:onPlayListItemClick(this);" item-itemId=@item.ItemId item-itemSeq=@item.ItemSeq>
                @(item.ItemSeq + " / " + item.Title + " / " + item.TitleAlias + " / ")
                <span id="playCount_@item.ItemSeq">@item.PlayCount</span>
            </a>


        </div>
    }
</div>

<script>

    //プレイリスト管理変数
    var playListHeaderId = "@Html.Raw(Model.PlayListHeaderId)";
    var playList = @Html.Raw(Model.PlayListJson);
    var currentIndex = 0;
    var maxIndex = playList.length - 1;

    var player;
    console.log(playList);

    document.onreadystatechange = function() {
        if (document.readyState === 'complete') {
            console.log('document is complete');
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        }
    }


    function onYouTubeIframeAPIReady() {
        console.log("onYouTubeIframeAPIReady!");

        player = new YT.Player('player', {
            height: '360',
            width: '640',
            videoId: playList[currentIndex].itemId,
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    function onPlayerReady(event) {
        console.log('onPlayerReady');
    }

    function onPlayerStateChange(event) {
        console.log('ステータス変更 : ' + event.data);
        if (event.data == 0) {
            console.log('再生終了');

            console.log("次の動画を再生");
            playNextVideo();

        }
        if (event.data == 3) {
            console.log("バッファリング中...");
        }
        if (event.data == -1) {

            console.log("再生未開始のため、再生開始");
            player.playVideo();
        }
    }

    function playNextVideo() {

        var prevIndex = currentIndex;

        //インデックスを加算
        if (currentIndex === maxIndex) {
            currentIndex = 0;
        } else {
            currentIndex += 1;
        }

        console.log("currentIndex : " + currentIndex);
        player.loadVideoById(playList[currentIndex].itemId);

        //再生回数を加算
        addPlayCount(playListHeaderId, prevIndex);
    }

function onPlayListItemClick(sender) {
    console.log("次に再生するID：" + sender.getAttribute("item-itemId"));

    //インデックスを変更
    currentIndex = parseInt(sender.getAttribute("item-itemSeq"));
    player.loadVideoById(sender.getAttribute("item-itemId"));


}

    function addPlayCount(playListId,seq) {
        //対象のパラメータで再生回数を増やすAPIを呼び出す
        var req = new XMLHttpRequest();

        req.onreadystatechange = function () {
            if (req.readyState == 4) {
                //通信完了
                if (req.status == 200) {
                    console.log("addPlayCount 200OK");
                    console.log("responseText : " + req.responseText);
                    console.log("parsed : " + JSON.parse(req.responseText));
                    document.getElementById("playCount_" + seq).innerText = JSON.parse(req.responseText)["playCount"];

                }
            } else {
                console.log("addPlayCount calling...");
            }
        }

        req.open("GET", "/Player/addPlayCount?playListHeaderId=" + playListId + "&itemSeq=" + seq);
        req.send(null);

    }

</script>