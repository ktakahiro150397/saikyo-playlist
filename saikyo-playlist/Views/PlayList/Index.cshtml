@model saikyo_playlist.Models.PlayListManage.ManagePlayListViewModel

<style>

    .playlist-menu-elem {
        width: 100%;
        border: 1px solid #ced4da;
        border-radius: 5px;
        margin-bottom: 1em;
        padding: .5em 0 0em .5em;
    }

    .playlist-menu-button {
        text-decoration: none;
        color: black;
        font-weight: 700;
        font-size:1.2em;
    }

    .playlist-menu-desc{
        /*font-size:.9em;*/
    }

</style>

<div>

    <div class="playlist-menu-elem">
        <a class="playlist-menu-button" title="URLを入力して、ライブラリにアイテムを追加します。" href="@Url.Action("AddItem","PlayList")">
            URLからライブラリに追加
        </a>
        <p class="playlist-menu-desc">URLを入力して、ライブラリにアイテムを追加します。</p>
    </div>

    <div class="playlist-menu-elem">
        <a class="playlist-menu-button" title="Youtubeの再生リストに含まれる曲をすべてライブラリに追加します。" href="@Url.Action("AddFromPlayList","PlayList")">
            再生リストのURLからライブラリに追加
        </a>
        <p class="playlist-menu-desc">Youtubeの再生リストに含まれる曲をすべてライブラリに追加します。</p>
    </div>

    <div class="playlist-menu-elem">
        <a class="playlist-menu-button" href="@Url.Action("CreatePlayList","PlayList")">
            プレイリストを作成
        </a>
        <p class="playlist-menu-desc">プレイリストを作成します。</p>
    </div>

</div>

<h1>プレイリスト一覧</h1>

@if (Model.managePlayListItems.Count == 0)
{
    @*プレイリストが存在しない*@
    <p>
        プレイリストが存在しません。
    </p>


}
else
{




    @foreach (var item in Model.managePlayListItems)
    {
        <div>
            <a href="@Url.Action("Play","Player",new { playListHeaderId = @item.PlayListHeaderId })">
                @item.PlayListName
            </a>
            @*<span style="margin-left:20px;"></span>
            <a href="@Url.Action("Edit","PlayList",new { playListHeaderId = @item.PlayListHeaderId })">
                編集
            </a>*@
        </div>

    }


}

